##change all of these to eval false; means won't run
linkRegions= 'https://github.com/efweavs1989/PUBPOL599B_DATA/blob/master/hh_sec_a.csv?raw=true'
region=read.csv(linkRegions)
region
i_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_i.csv'
i_data= read.csv(i_link)
q1_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_q1.csv'
q1_data= read.csv(q1_link)
names(region)
region=region[,c("y4_hhid","hh_a01_1", "hh_a01_2")]
names(i_data)
i_data=i_data[,c("y4_hhid","hh_i05","hh_i06","hh_i08","hh_i09","hh_i10")]
names(q1_data)
q1_data=q1_data[,c("y4_hhid","hh_q01_1","hh_q01_2","hh_q01_3","hh_q01_4")]
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
str(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
names(projectData)
(mean_variables=aggregate(cbind(Value_of_Repairs, Value_of_Improvements, MPesa_Use, Ezy_Pesa_Use, Airtel_Use, Tigo_Pesa_Use) ~ Region_Code, data=projectData, FUN=mean))
getMode=function(aColumn){
freqTable=table(aColumn)
maxFrequency=max(freqTable)
names(freqTable[freqTable==maxFrequency])
}
#Cory: here I find the mode and it's totally fine
getMode(projectData$Floor_Material)
projectData$Floor_Material= as.character(projectData$Floor_Material)
(mode_variables=aggregate(cbind(Wall_Material, Roof_Material, Floor_Material) ~ Region_Code, data=projectData, FUN=getMode))
mode_variables$Floor_Material= as.character(mode_variables$Floor_Material)
mode_variables
projectData=merge(mean_variables,mode_variables)
sd(mean_variables$Value_of_Improvements,na.rm = T)
library(moments)
skewness(projectData$Value_of_Improvements,na.rm = T)
kurtosis(projectData$Value_of_Improvements,na.rm = T)
library(ggplot2)
# keeping non missing:
data=projectData[is.finite(projectData$Value_of_Improvements),]
#
# selecting a var:
var=data$Value_of_Improvements
#
# saving mean and sd:
mnVar=mean(var,na.rm = T)
sdVar=sd(var,na.rm = T)
#
#plotting
base = ggplot(data, aes(x=var))
hist = base + geom_histogram(fill="green",
color='grey',
aes(y=..density..))
#
histAndNormal = hist + stat_function(fun=dnorm,
color="red",
args=list(mean=mnVar,sd=sdVar))
#
histAndNormal
str(projectData)
res <- cor(projectData[,c(2,3)],use='complete.obs')
round(res, 2)
library(car)
scatterplotMatrix(projectData_res[,c(2,3)],
main="Simple Scatterplot Matrix")
library(car)
scatterplotMatrix(projectData[,c(2,3)],
main="Simple Scatterplot Matrix")
#For Emma: Can I change the variable names in this plot? See class notes
projectData=projectData[complete.cases(projectData),]
p <- ggplot(projectData, aes(MPesa_Use,Value_of_Improvements))
p + geom_boxplot() + labs(title="The Value of Improvements vs. MPesa Use")
projectData=projectData[complete.cases(projectData),]
p <- ggplot(projectData, aes(Roof_Material,Value_of_Improvements))
p + geom_boxplot() + labs(title="The Value of Improvements vs. Roof Material")
projectData=projectData[complete.cases(projectData),]
p <- ggplot(projectData, aes(Wall_Material,Value_of_Improvements))
p + geom_boxplot() + labs(title="The Value of Improvements vs. Wall Material")
projectData=projectData[complete.cases(projectData),]
p <- ggplot(projectData, aes(Floor_Material,Value_of_Improvements))
p + geom_boxplot() + labs(title="The Value of Improvements vs. Floor Material")
length(projectData$Region_Code)==length(unique(projectData$Region_Code))
row.names(projectData)=projectData$Region_Code
str(projectData[,c(1:7)])
# input is: similary matrix
demoClus=hclust(demoSimi,method = 'average') # linkage is 'average'
# input is: similary matrix
demoClus=hclust(demoSimi,method = 'average') # linkage is 'average'
library(cluster)
demoSimi=daisy(projectData[,c(1:7)],metric = "euclidean",
stand=TRUE) # standardizing
# input is: similary matrix
demoClus=hclust(demoSimi,method = 'average') # linkage is 'average'
# General plot
plot(demoClus,cex=0.5)
plot(demoClus,cex=0.3)
rect.hclust(demoClus, k = 4,border = c('orange','blue','red','green'))
demsil4=silhouette(cutree(demoClus, k = 4), demoSimi)
clust4solution=data.frame(matrix(demsil4,ncol = 3,dimnames =dimnames(demsil4)))
row.names(clust4solution)=projectData$Region_Code
clust4solution
# saving solution chosen
solution=clust4solution
# creating country column
solution$Region_Code=row.names(clust4solution)
row.names(solution)=NULL # resetting rownames
# merging
projectData=merge(projectData,solution)
str(projectData)
compressedMap= "https://github.com/efweavs1989/PUBPOL599B_Project/raw/master/TZA_adm_shp.zip"
library(utils)
temp=tempfile()
download.file(compressedMap, temp)
unzip(temp)
library(rgdal)
TZzipMap <- rgdal::readOGR("TZA_adm1.shp",stringsAsFactors=F) # use name
TZzipMap$ID_1=as.numeric(TZzipMap$ID_1)
str(TZzipMap$ID_1)
plot(TZzipMap,col='red')
View(projectData)
##change all of these to eval false; means won't run
linkRegions= 'https://github.com/efweavs1989/PUBPOL599B_DATA/blob/master/hh_sec_a.csv?raw=true'
region=read.csv(linkRegions)
region
View(i_data)
i_data=i_data[,c("y4_hhid","hh_i05","hh_i06","hh_i08","hh_i09","hh_i10")]
names(q1_data)
q1_data=q1_data[,c("y4_hhid","hh_q01_1","hh_q01_2","hh_q01_3","hh_q01_4")]
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
View(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
View(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
str(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
names(projectData)
##change all of these to eval false; means won't run
linkRegions= 'https://github.com/efweavs1989/PUBPOL599B_DATA/blob/master/hh_sec_a.csv?raw=true'
region=read.csv(linkRegions)
region
i_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_i.csv'
i_data= read.csv(i_link)
q1_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_q1.csv'
q1_data= read.csv(q1_link)
names(region)
names(i_data)
i_data=i_data[,c("y4_hhid","hh_i05","hh_i06","hh_i08","hh_i09","hh_i10")]
names(q1_data)
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
str(projectData)
---
# PUBPOL599B: Final Project
output:
html_document:
df_print: paged
---
Get dataset with region data from GitHub:
```{r,eval=TRUE}
##change all of these to eval false; means won't run
linkRegions= 'https://github.com/efweavs1989/PUBPOL599B_DATA/blob/master/hh_sec_a.csv?raw=true'
region=read.csv(linkRegions)
region
```
Get dataset with Section I data from Github:
```{r,eval=TRUE}
i_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_i.csv'
i_data= read.csv(i_link)
```
Get dataset with Section Q1 data from Github:
```{r,eval=TRUE}
q1_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_q1.csv'
q1_data= read.csv(q1_link)
```
View names to identify which variables need to be kept. Keep household ID, region number, and region name:
```{r,eval=TRUE}
names(region)
```
```{r,eval=TRUE}
region=region[,c("y4_hhid","hh_a01_1", "hh_a01_2")]
```
View names for Section I data to determine which to keep:
```{r,eval=TRUE}
names(i_data)
```
Select variables from Section I to anlayze. These are:
"hh_i05": In the past year, how much have you paid on repairs to your dwelling? (TSH)
"hh_i06": In the past year, how much have you paid in improvements to your home (excluding any purchases listed in previous question)? (TSH)
"hh_i08": The walls of the main dwelling are predominantly made of what materials? (See questionnaire for options)
"hh_i09": The roof of the main dwelling is predominantly made of what materials? (See questionnaire for options)
"hh_i10": The floor of the main dwelling is predominantly made of what materials? (See questionnaire for options)
```{r,eval=TRUE}
i_data=i_data[,c("y4_hhid","hh_i05","hh_i06","hh_i08","hh_i09","hh_i10")]
```
View names from Section Q1 data to determine which namesto keep:
```{r,eval=TRUE}
names(q1_data)
```
Select variables from Section Q that want to anlayze. These are:
"hh_q01_1": Did you or anyone in your household use M-PESA to transfer money over the last 12 months
"hh_q01_2": Did you or anyone in your household use EZY PESA to transfer money over the last 12 months
"hh_q01_3": Did you or anyone in your household use Airtel Money to transfer money over the last 12 months
"hh_q01_4": Did you or anyone in your household use TIGO PESA to transfer money over the last 12 months
```{r,eval=TRUE}
q1_data=q1_data[,c("y4_hhid","hh_q01_1","hh_q01_2","hh_q01_3","hh_q01_4")]
```
Merge data sets. Need to merge one by one.
```{r,eval=TRUE}
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
```
Check the data type to determine how to aggregate the data.
```{r,eval=TRUE}
str(projectData)
```
Rename the variables of interest:
```{r,eval=TRUE}
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
##change all of these to eval false; means won't run
linkRegions= 'https://github.com/efweavs1989/PUBPOL599B_DATA/blob/master/hh_sec_a.csv?raw=true'
region=read.csv(linkRegions)
region
i_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_i.csv'
i_data= read.csv(i_link)
q1_link= 'https://github.com/efweavs1989/PUBPOL599B_DATA/raw/master/hh_sec_q1.csv'
q1_data= read.csv(q1_link)
names(region)
region=region[,c("y4_hhid","hh_a01_1", "hh_a01_2")]
names(i_data)
i_data=i_data[,c("y4_hhid","hh_i05","hh_i06","hh_i08","hh_i09","hh_i10")]
names(q1_data)
q1_data=q1_data[,c("y4_hhid","hh_q01_1","hh_q01_2","hh_q01_3","hh_q01_4")]
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
str(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
View(projectData)
View(projectData)
table(projectData$Floor_Material)
names(projectData)
(mean_variables=aggregate(cbind(Value_of_Repairs, Value_of_Improvements, MPesa_Use, Ezy_Pesa_Use, Airtel_Use, Tigo_Pesa_Use) ~ Region_Code, data=projectData, FUN=mean))
getMode=function(aColumn){
freqTable=table(aColumn)
maxFrequency=max(freqTable)
names(freqTable[freqTable==maxFrequency])
}
#Cory: here I find the mode and it's totally fine
getMode(projectData$Floor_Material)
(mode_variables=aggregate(cbind(Wall_Material, Roof_Material, Floor_Material) ~ Region_Code, data=projectData, FUN=getMode))
projectData$Floor_Material= as.character(projectData$Floor_Material)
(mode_variables=aggregate(cbind(Wall_Material, Roof_Material, Floor_Material) ~ Region_Code, data=projectData, FUN=getMode))
mode_variables$Floor_Material= as.character(mode_variables$Floor_Material)
mode_variables
i_reg=merge(region,i_data)
projectData=merge(i_reg,q1_data)
str(projectData)
names(projectData)=gsub("y4_hhid", "Household_ID", names(projectData))
names(projectData)=gsub("hh_a01_1", "Region_Code", names(projectData))
names(projectData)=gsub("hh_a01_2", "Region_Name", names(projectData))
names(projectData)=gsub("hh_i05", "Value_of_Repairs", names(projectData))
names(projectData)=gsub("hh_i06", "Value_of_Improvements", names(projectData))
names(projectData)=gsub("hh_i08", "Wall_Material", names(projectData))
names(projectData)=gsub("hh_i09", "Roof_Material", names(projectData))
names(projectData)=gsub("hh_i10", "Floor_Material", names(projectData))
names(projectData)=gsub("hh_q01_1", "MPesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_2", "Ezy_Pesa_Use", names(projectData))
names(projectData)=gsub("hh_q01_3", "Airtel_Use", names(projectData))
names(projectData)=gsub("hh_q01_4", "Tigo_Pesa_Use", names(projectData))
projectData
table(projectData$Floor_Material)
names(projectData)
(mean_variables=aggregate(cbind(Value_of_Repairs, Value_of_Improvements, MPesa_Use, Ezy_Pesa_Use, Airtel_Use, Tigo_Pesa_Use) ~ Region_Code, data=projectData, FUN=mean))
getMode=function(aColumn){
freqTable=table(aColumn)
maxFrequency=max(freqTable)
names(freqTable[freqTable==maxFrequency])
}
#Cory: here I find the mode and it's totally fine
getMode(projectData$Floor_Material)
table(projectData$Floor_Material,projectData$Region_Code)
table(projectData$Floor_Material)
max(table(projectData$Floor_Material))
names(max(table(projectData$Floor_Material)))
FT=table(projectData$Floor_Material)
MV=max(table(projectData$Floor_Material))
FT=table(projectData$Floor_Material)
MV=max(table(projectData$Floor_Material))
names(FT[FT==MV])
test=projectData$Floor_Material
FT=table()
test=projectData$Floor_Material
FT=table(test)
MV=max(table(test))
names(FT[FT==MV])
projectData[projectData$Region_Code==5,]
projectData[projectData$Region_Code==5,]$Floor_Material
table(projectData[projectData$Region_Code==5,]$Floor_Material)
test=table(projectData[projectData$Region_Code==5,]$Floor_Material)
FT=table(test)
MV=max(table(test))
names(FT[FT==MV])
test=table(projectData[projectData$Region_Code==5,]$Floor_Material)
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])
test=table(projectData[projectData$Region_Code==5,]$Floor_Material)
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV[1]])
table(projectData[projectData$Region_Code==5,]$Floor_Material)
names(table(projectData[projectData$Region_Code==5,]$Floor_Material))
test=table(projectData[projectData$Region_Code==5,]$Floor_Material)
#FT=
table(test)
#MV=list(max(table(test)))
#names(FT[FT==MV[1]])
test#=
table(projectData[projectData$Region_Code==5,]$Floor_Material)
#FT=
#table(test)
#MV=list(max(table(test)))
#names(FT[FT==MV[1]])
#test#=
table(projectData[projectData$Region_Code==5,]$Floor_Material)
#FT=
#table(test)
#MV=list(max(table(test)))
#names(FT[FT==MV[1]])
(test=table(projectData[projectData$Region_Code==5,]$Floor_Material))
#FT=
#table(test)
#MV=list(max(table(test)))
#names(FT[FT==MV[1]])
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV[1]])
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV)
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=max(table(test))
names(FT[FT==MV])
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=max(table(test))
names(FT[FT==MV])[1]
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV[1]])
test=projectData[projectData$Region_Code==5,]$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])[1]
test=projectData[projectData$Region_Code==5,]$Floor_Material
#test=projectData$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])
test=projectData[projectData$Region_Code==5,]$Floor_Material
#test=projectData$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])[1]
#test=projectData[projectData$Region_Code==5,]$Floor_Material
test=projectData$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])[1]
#test=projectData[projectData$Region_Code==5,]$Floor_Material
test=projectData$Floor_Material
FT=table(test)
MV=list(max(table(test)))
names(FT[FT==MV])#[1]
getMode=function(aColumn){
freqTable=table(aColumn)
maxFrequency=max(freqTable)
names(freqTable[freqTable==maxFrequency])[1]
}
#Cory: here I find the mode and it's totally fine
getMode(projectData$Floor_Material)
(mode_variables=aggregate(cbind(Wall_Material, Roof_Material, Floor_Material) ~ Region_Code, data=projectData, FUN=getMode))
